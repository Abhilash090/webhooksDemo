<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Post_to_Chatter</name>
        <label>Post to Chatter</label>
        <locationX>314</locationX>
        <locationY>1190</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>text</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>varUserRecord.Id</elementReference>
            </value>
        </inputParameters>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <apiVersion>53.0</apiVersion>
    <assignments>
        <name>Add_Group_to_the_List</name>
        <label>Add Group to the List</label>
        <locationX>138</locationX>
        <locationY>758</locationY>
        <assignmentItems>
            <assignToReference>varGroupMemberList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>varGroupMember</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>groupMember</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Prepare_Group_Member_Record</name>
        <label>Prepare Group Member Record</label>
        <locationX>138</locationX>
        <locationY>638</locationY>
        <assignmentItems>
            <assignToReference>varGroupMember.UserOrGroupId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>varUserRecord.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varGroupMember.GroupId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>groupMember.GroupId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_Group_to_the_List</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_if_Group_Members_Found</name>
        <label>Check if Group Members Found?</label>
        <locationX>314</locationX>
        <locationY>278</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SOQL_All_Group_Member_Records</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>groupMember</targetReference>
            </connector>
            <label>Found?</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_Member_if_of_Type_Queue_or_Group</name>
        <label>Check if Member if of Type Queue or Group</label>
        <locationX>270</locationX>
        <locationY>518</locationY>
        <defaultConnector>
            <targetReference>groupMember</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Member_is_Group</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>groupMember.Group.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Regular</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>groupMember.Group.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Queue</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Prepare_Group_Member_Record</targetReference>
            </connector>
            <label>Member is Group or Queue</label>
        </rules>
    </decisions>
    <interviewLabel>Subflow: Clone Group Member Record {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Subflow: Clone Queue/Group Member Record</label>
    <loops>
        <name>groupMember</name>
        <label>Iterate through all group Member Records</label>
        <locationX>50</locationX>
        <locationY>398</locationY>
        <collectionReference>SOQL_All_Group_Member_Records</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Check_if_Member_if_of_Type_Queue_or_Group</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>crGroupMember</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>crGroupMember</name>
        <label>Create Group Member Record</label>
        <locationX>50</locationX>
        <locationY>1070</locationY>
        <faultConnector>
            <targetReference>Post_to_Chatter</targetReference>
        </faultConnector>
        <inputReference>varGroupMemberList</inputReference>
    </recordCreates>
    <recordLookups>
        <name>SOQL_All_Group_Member_Records</name>
        <label>SOQL All Group Member Records</label>
        <locationX>314</locationX>
        <locationY>158</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_if_Group_Members_Found</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varUserRecord.ClonedFrom__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>188</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>SOQL_All_Group_Member_Records</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>varGroupMember</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>GroupMember</objectType>
    </variables>
    <variables>
        <name>varGroupMemberList</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>GroupMember</objectType>
    </variables>
    <variables>
        <name>varUserRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>User</objectType>
    </variables>
</Flow>
